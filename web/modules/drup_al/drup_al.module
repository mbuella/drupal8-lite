<?php

use Drupal\Core\PhpStorage\PhpStorageFactory;
use Drupal\Core\Cache\Cache;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Symfony\Cmf\Component\Routing\RouteObjectInterface;
use Drupal\Core\Link;

$node = null;

function drup_al_theme($existing, $type, $theme, $path) {
  $module_path =  drupal_get_path('module', 'drup_al');
  $template_path = $module_path . '/templates/';

  $default_settings = [  
      'render element' => 'default',
      'path' => $template_path,
  ];

  return [
    'main_index' => array_merge($default_settings, [  
      'template' => 'index/main-index',
    ]),
    'error_404' => [
      'render element' => 'default',
      'path' => $module_path . '/templates/error',
      // 'theme path' => $module_path,
    ],
    'post_list' => [
      'render element' => 'default',
      'path' => $module_path . '/templates/post',
      'variables' => ['posts' => NULL],
      // 'theme path' => $module_path,
    ],
    'post_view' => [
      'render element' => 'default',
      'path' => $module_path . '/templates/post',
      'variables' => ['post' => false],
      // 'theme path' => $module_path,
    ],
  ];
}

function drup_al_user_login($account) {
  if($account->hasRole('system_admin')) {
    //redirect to admin page
    $response = new RedirectResponse('/admin', '301');
    $response->send();
    exit(0);
  }
}

function drup_al_node_presave(Drupal\node\NodeInterface $node) {
  
  switch ($node->bundle()) {
    case 'post':
      post_presave($node);
    break;
  }
  
  drup_al_clear_cache();
}

function drup_al_node_delete(Drupal\node\NodeInterface $node) {
  //last case: delete all Twig cache
  drup_al_clear_cache();
}

function post_presave(Drupal\node\NodeInterface $node) {
  if($node->bundle() == 'post') {
    $node->set('field_post_slug',
      \Drupal::service('pathauto.alias_cleaner')
        ->cleanString($node->get('title')->value)
    );
  }
}

function drup_al_clear_cache() {
  //last case: delete all Twig cache after post create/update 
  $module_handler = \Drupal::moduleHandler();
  $module_handler->invokeAll('cache_flush');
  // Cache::getBins()['page']->deleteAll();
  foreach (Cache::getBins() as $service_id => $cache_backend) {
   $cache_backend->deleteAll();
  }
}

function drup_al_system_breadcrumb_alter(&$breadcrumb, $route_match, array $context) {
  // Implementation derived from [http://www.gregboggs.com/drupal8-breadcrumbs/]
  
  $request = \Drupal::request();
  $route = $request->attributes->get(RouteObjectInterface::ROUTE_OBJECT);
  
  // Do not adjust the breadcrumbs on admin paths.
  if ($route && !$route->getOption('_admin_route')) {
    $title = \Drupal::service('title_resolver')->getTitle($request, $route);
    /* if (!isset($title)) {
      // Fallback to using the raw path component as the title if the
      // route is missing a _title or _title_callback attribute.
      $path = trim($context->getPathInfo(), '/');
      $path_elements = explode('/', $path);
      $title = str_replace(array('-', '_'), ' ', Unicode::ucfirst(end($path_elements)));
    }
    */
    $breadcrumb->addLink(Link::createFromRoute($title, '<none>'));
  }
}